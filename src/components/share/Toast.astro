---
interface Props {
  id?: string;
  message?: string;
  type?: "success" | "error" | "info";
}

const {
  id = "toast",
  message = "設定を保存しました",
  type = "success",
} = Astro.props;
---

<div class="toast">
  <input type="checkbox" id={id} />
  <label for={id} class={`${type}`}>
    <div class="accent-line"></div>
    <div class="content">
      <span class="icon"></span>
      <span class="message">{message}</span>
    </div>
  </label>
</div>

<script>
  // トーストを自動的に閉じるためのスクリプト
  const toast = document.querySelector(".toast");
  const trigger = toast?.querySelector('input[type="checkbox"]');

  if (!(trigger instanceof HTMLInputElement)) {
    console.error("トーストのトリガーが見つかりません");
    return;
  }
  // トーストが表示されたら、3秒後に自動的に閉じる
  trigger.addEventListener("change", () => {
    if (trigger.checked) {
      setTimeout(() => {
        trigger.checked = false;
      }, 3000);
    }
  });
</script>
