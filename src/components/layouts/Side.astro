---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import BadgedItem from "./BadgedItem.astro";
import LogoutButton from "./LogoutButton.astro";

const feedList = await getCollection("feed");
---

<aside>
  <header>
    <nav>
      <h2><a href="/" aria-label="home">RSS Reader</a></h2>
      <ul role="list">
        <li>
          <a href="/settings" aria-label="settings">
            <Icon name="settings" class="hover-card" />
          </a>
        </li>
        <li>
          <a href="/search" aria-label="search">
            <Icon name="search" class="hover-card" />
          </a>
        </li>
        <li>
          <a href="/bookmarks" aria-label="bookmarks">
            <Icon name="bookmark" class="hover-card" />
          </a>
        </li>
      </ul>
    </nav>
  </header>
  <hr />

  <section>
    <h2>Latest</h2>
    <ul role="list">
      <li>
        <BadgedItem
          title="Today"
          link="/articles?filter=today"
          unreadCount={feedList
            .flatMap((feed) => feed.data.articles)
            .filter(
              (article) =>
                article.publishedAt.toDateString() ===
                new Date().toDateString(),
            )
            .filter((article) => article.status === "unread").length}
        />
      </li>
      <li>
        <BadgedItem
          title="Unread"
          link="/articles?filter=unread"
          unreadCount={feedList
            .flatMap((feed) => feed.data.articles)

            .filter((article) => article.status === "unread").length}
        />
      </li>
    </ul>
  </section>
  <section class="feed-section">
    <h2>Feeds</h2>
    <ul role="list">
      {
        feedList.map((feed) => (
          <li>
            <BadgedItem
              title={feed.data.feed.title}
              link={`/feeds/${feed.id}`}
              unreadCount={
                feed.data.articles.filter(
                  (article) => article.status === "unread",
                ).length
              }
            />
          </li>
        ))
      }
    </ul>
  </section>
  <footer>
    <LogoutButton />
  </footer>
</aside>

<style>
  aside {
    display: grid;
    grid-template-rows: auto auto auto 1fr auto;
    background-color: var(--color-gray-100);
    border-right: 1px solid var(--color-gray-200);
    padding: var(--spacing-md);
  }

  [data-icon] {
    font-size: var(--font-size-3xl);
  }

  nav {
    h2 {
      a {
        text-decoration: none;
      }
    }
    ul {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
    }
  }

  section {
    h2 {
      font-size: var(--font-size-xs);
      margin-bottom: var(--spacing-md);
    }
    li {
      a {
        display: block;
        text-decoration: none;
      }
    }
  }

  footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-md);
  }
</style>
