---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import BadgedItem from "./BadgedItem.astro";

const feedList = await getCollection("feed");
---

<aside>
  <header>
    <nav>
      <ul role="list">
        <li>
          <a href="/astro-rss-reader/settings" aria-label="settings">
            <Icon name="settings" class="not-sr-only hover-card" />
            <span class="sr-only hover-card">設定</span>
          </a>
        </li>
        <li>
          <a href="/astro-rss-reader/search" aria-label="search">
            <Icon name="search" class="not-sr-only hover-card" />
            <span class="sr-only hover-card">検索</span>
          </a>
        </li>
        <li>
          <a href="/astro-rss-reader/bookmarks" aria-label="bookmarks">
            <Icon name="bookmark" class="not-sr-only hover-card" />
            <span class="sr-only hover-card">ブックマーク</span>
          </a>
        </li>
      </ul>
    </nav>
  </header>
  <hr />

  <section>
    <h2>Latest</h2>
    <ul role="list">
      <li>
        <BadgedItem
          title="Today"
          link="/astro-rss-reader/articles?filter=today"
          unreadCount={feedList
            .flatMap((feed) => feed.data.articles)
            .filter(
              (article) =>
                article.publishedAt.toDateString() ===
                new Date().toDateString(),
            )
            .filter((article) => article.status === "unread").length}
        />
      </li>
      <li>
        <BadgedItem
          title="Unread"
          link="/astro-rss-reader/articles?filter=unread"
          unreadCount={feedList
            .flatMap((feed) => feed.data.articles)

            .filter((article) => article.status === "unread").length}
        />
      </li>
    </ul>

    <section class="feed-section">
      <h2>Feeds</h2>
      <ul role="list">
        {
          feedList.map((feed) => (
            <li>
              <BadgedItem
                title={feed.data.feed.title}
                link={`/astro-rss-reader/feeds/${feed.id}`}
                unreadCount={
                  feed.data.articles.filter(
                    (article) => article.status === "unread",
                  ).length
                }
              />
            </li>
          ))
        }
      </ul>
    </section>
  </section>

  <style>
    aside {
      background-color: var(--color-gray-100);
      border-right: 1px solid var(--color-gray-200);
      padding: var(--spacing-md);
    }

    [data-icon] {
      font-size: var(--font-size-3xl);
    }

    h2 {
      font-size: var(--font-size-xs);
      margin-bottom: var(--spacing-md);
    }

    nav {
      ul {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
      }
    }

    section {
      li {
        a {
          display: block;
          text-decoration: none;
        }
      }
    }
  </style>
</aside>
