---
import { Icon } from "astro-icon/components";
import Toast from "~/components/share/Toast.astro";
import KeywordChips from "~/components/settings/KeywordChips.astro";
import Layout from "~/layouts/Layout.astro";
import { $settings } from "~/store/settings";

const settingsData = $settings.get();
const currentTheme = settingsData.appearance.theme;
const currentFontSize = settingsData.appearance.fontSize;
const notificationsEnabled =
  settingsData.notifications.enabledLatestNotifications;
const keywordNotificationsEnabled =
  settingsData.notifications.enabledKeywordsNotifications;
---

<Layout title="設定">
  <Toast id="settings-toast" transition:persist message="保存しました" />
  <form action="/settings" method="post">
    <header>
      <h1>設定</h1>
      <button type="submit" class="hover-card">
        <Icon name="save" />
      </button>
    </header>
    <section>
      <h2>Appearance</h2>
      <ul role="list">
        <li>
          <header>
            <h3>カラーテーマ</h3>
            <p>アプリのカラーテーマを選択</p>
          </header>

          <select name="theme">
            <option value="system" selected={currentTheme === "system"}
              >システム設定に従う</option
            >
            <option value="light" selected={currentTheme === "light"}
              >ライトモード</option
            >
            <option value="dark" selected={currentTheme === "dark"}
              >ダークモード</option
            >
          </select>
        </li>

        <li>
          <header>
            <h3>フォントサイズ</h3>
            <p>記事の表示サイズを調整</p>
          </header>
          <select name="fontSize">
            <option value="small" selected={currentFontSize === "small"}
              >小</option
            >
            <option value="medium" selected={currentFontSize === "medium"}
              >中</option
            >
            <option value="large" selected={currentFontSize === "large"}
              >大</option
            >
          </select>
        </li>
      </ul>
    </section>
    <section>
      <h2>Notifications</h2>
      <ul role="list">
        <li>
          <header>
            <h3>新着通知</h3>
            <p>フィードの新着記事を通知</p>
          </header>
          <label>
            <input
              class="toggle-switch"
              type="checkbox"
              name="new-articles"
              checked={notificationsEnabled}
            />
          </label>
        </li>

        <li>
          <header>
            <h3>キーワード通知</h3>
            <p>指定したキーワードを含む記事を通知</p>
          </header>
          <label>
            <input
              class="toggle-switch"
              type="checkbox"
              name="keyword-notifications"
              checked={keywordNotificationsEnabled}
            />
          </label>
        </li>

        <li>
          <header>
            <h3>通知キーワード</h3>
            <p>通知したいキーワードを入力</p>
          </header>
          <KeywordChips keywords={["AI", "Machine Learning"]} />
        </li>
      </ul>
    </section>
    <section>
      <h2>Account</h2>
      <ul role="list">
        <li>
          <header>
            <h3>同期設定</h3>
            <p>複数デバイス間で設定を同期</p>
          </header>
          <label>
            <input class="toggle-switch" type="checkbox" name="sync-settings" />
          </label>
        </li>
        <li>
          <header>
            <h3>データエクスポート</h3>
            <p>設定とデータをエクスポート</p>
          </header>
          <button>エクスポート</button>
        </li>
        <li>
          <header>
            <h3>アカウント削除</h3>
            <p>すべてのデータが削除されます</p>
          </header>
          <button>削除</button>
        </li>
      </ul>
    </section>
  </form>
</Layout>
<style>
  form > header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-lg);

    [data-icon] {
      font-size: var(--font-size-xl);
    }
  }
  h1 {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-lg);
    padding-inline-start: var(--spacing-lg);
  }
  form {
    max-inline-size: 800px;
    margin: 0 auto;
  }
  section {
    border-radius: var(--border-radius-sm);
    padding: var(--spacing-lg);

    h2 {
      font-size: var(--font-size-lg);
      margin-bottom: var(--spacing-lg);
    }

    ul {
      display: grid;
      gap: var(--spacing-md);
    }

    li {
      display: grid;
      grid-template-columns: 1fr auto;
      align-items: center;
      gap: var(--spacing-lg);
      header {
        h3 {
          font-size: var(--font-size-base);
          margin-bottom: var(--spacing-sm);
          color: var(--text-primary);
        }
        p {
          font-size: var(--font-size-sm);
          color: var(--color-text-secondary);
        }
      }
      select {
        width: fit-content;
      }
    }
  }
</style>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    const form = document.querySelector("form");
    form?.addEventListener("submit", async (event) => {
      console.log("submit");
      event.preventDefault();
      const formData = new FormData(form);
      const { error } = await actions.updateSettings(formData);
      if (error) {
        alert("Failed to save settings");
      } else {
        await navigate("/settings");
        const toast = document?.getElementById("settings-toast");
        if (toast instanceof HTMLInputElement) {
          toast.checked = true;
        }
      }
    });
  });
</script>
